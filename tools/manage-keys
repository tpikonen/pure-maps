#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os, sys, glob

strip_allowed = True

try:
    from apikeys import Keys
except:
    from apikeys_dummy import Keys
    strip_allowed = False
    plain = {key: "" for key in Keys}
    Keys = plain

if len(sys.argv) != 3 or sys.argv[1] not in ["inject", "strip"]:
    print('Usage: %s inject|strip dirname\nwhere dirname is a root of a project and either strip or inject should be given\n' % sys.argv[0])
    sys.exit(-1)

inject = (sys.argv[1] == "inject")
root = sys.argv[2]

if not inject and not strip_allowed:
    print("Stripping empty keys is not allowed")
    sys.exit(-1)

if inject: print('Injecting keys into %s' % root)
else: print( 'Stripping keys from %s' % root)

for ext in ["py", "qml", "json"]:
    for fname in glob.glob(os.path.join(root, "*." + ext)):
        with open(fname, 'r', encoding='utf-8') as f:
            s = f.read()
        keys = ""
        for k, v in Keys.items():
            if inject:
                old = k
                new = v
            else:
                old = v
                new = k
            if s.find(old) >= 0:
                keys += k + " "
                s = s.replace(old, new)
        if len(keys) > 0:
            print(fname, ":", keys)
            with open(fname, 'w') as f:
                f.write(s)
